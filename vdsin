from vk_api.longpoll import VkLongPoll, VkEventType
import vk_api, json

vk_session = vk_api.VkApi(token = 'token')
longpoll = VkLongPoll(vk_session)


print('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω')

class User:
	def __init__(self, id, mode):
		self.id = id
		self.mode = mode
		self.name = ''
		self.age = -1

def get_keyboard(buts):
	nb = []
	for i in range(len(buts)):
		nb.append([])
		for k in range(len(buts[i])):
			nb[i].append(None)
	for i in range(len(buts)):
		for k in range(len(buts[i])):
			text = buts[i][k][0]
			color = {'–∑–µ–ª–µ–Ω—ã–π' : 'positive', '–∫—Ä–∞—Å–Ω—ã–π' : 'negative', '—Å–∏–Ω–∏–π' : 'primary'}[buts[i][k][1]]
			nb[i][k] = {"action": {"type": "text", "payload": "{\"button\": \"" + "1" + "\"}", "label": f"{text}"}, "color": f"{color}"}
	first_keyboard = {'one_time': False, 'buttons': nb, 'inline' : False}
	first_keyboard = json.dumps(first_keyboard, ensure_ascii=False).encode('utf-8')
	first_keyboard = str(first_keyboard.decode('utf-8'))
	return first_keyboard

def sender(id, text, key):
	vk_session.method('messages.send', {'user_id' : id, 'message' : text, 'random_id' : 0, 'keyboard' : key})

clear_key = get_keyboard(
	[]
)

menu_key = get_keyboard([
	[('üöπ–û —Å–µ–±–µüö∫', '—Å–∏–Ω–∏–π'), ('üòç–ë–æ–Ω—É—Åüòç', '–∑–µ–ª–µ–Ω—ã–π')]

])

users = []

for event in longpoll.listen():
	if event.type == VkEventType.MESSAGE_NEW:
		if event.to_me:

			id = event.user_id
			msg = event.text.lower()

			if msg == '–Ω–∞—á–∞—Ç—å':
				flag = 0
				for user in users:
					if user.id == id:
						flag = 1
						break
				if flag == 0:
					users.append(User(id, 'reg1'))
					sender(id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –±–æ—Ç–µ:\n\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:', clear_key)
				elif flag == 1:
					for user in users:
						if user.id == id:
							if not(user.moded in ['reg1', 'reg2', 'reg3']):
								sender(id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.', clear_key)

			else:
				for user in users:
					if user.id == id:

						if user.mode == 'reg1':
							user.name = msg.title()
							sender(id, '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:', clear_key)
							user.mode = 'reg2'

						elif user.mode == 'reg2':
							try:
								user.age = int(msg)
								sender(id, '–í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!', menu_key)
								user.mode = 'menu'
							except:
								sender(id, '–ù–µ –ø–æ–¥—Ö–æ–¥–∏—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!', clear_key)
							
						if user.mode == 'reg3':
							user.name == msg.title()
							sender(id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –Ω–∞—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:', clear_key)
							user.mode = 'reg4'

						elif user.mode == 'menu':
							if msg == 'üöπ–æ —Å–µ–±–µüö∫':
								sender(id, f'–í–∞—à–µ –∏–º—è –≤ –±–æ—Ç–µ: {user.name}\n–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç –≤ –±–æ—Ç–µ: {user.age}', menu_key)
								
						if user.mode == 'menu':
							if msg == 'üòç–±–æ–Ω—É—Åüòç':
								sender(id, f'–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞...', menu_key)
